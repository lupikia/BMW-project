//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace david_ndlovu.ReplicationSerivce {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReplicationSerivce.IReplication")]
    public interface IReplication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReplication/BackUpForReplication", ReplyAction="http://tempuri.org/IReplication/BackUpForReplicationResponse")]
        ReplicationServiceApplication.Http.ResponseReplication BackUpForReplication(string source, string destination, bool includeSubDirectory, bool cleanDestination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReplication/BackUpForReplication", ReplyAction="http://tempuri.org/IReplication/BackUpForReplicationResponse")]
        System.Threading.Tasks.Task<ReplicationServiceApplication.Http.ResponseReplication> BackUpForReplicationAsync(string source, string destination, bool includeSubDirectory, bool cleanDestination);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReplicationChannel : david_ndlovu.ReplicationSerivce.IReplication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReplicationClient : System.ServiceModel.ClientBase<david_ndlovu.ReplicationSerivce.IReplication>, david_ndlovu.ReplicationSerivce.IReplication {
        
        public ReplicationClient() {
        }
        
        public ReplicationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReplicationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReplicationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReplicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReplicationServiceApplication.Http.ResponseReplication BackUpForReplication(string source, string destination, bool includeSubDirectory, bool cleanDestination) {
            return base.Channel.BackUpForReplication(source, destination, includeSubDirectory, cleanDestination);
        }
        
        public System.Threading.Tasks.Task<ReplicationServiceApplication.Http.ResponseReplication> BackUpForReplicationAsync(string source, string destination, bool includeSubDirectory, bool cleanDestination) {
            return base.Channel.BackUpForReplicationAsync(source, destination, includeSubDirectory, cleanDestination);
        }
    }
}
